" PLUGINS ---------------------------------------------------------------- {{{

" Plugin code goes here.

call plug#begin()

" Git changes highlight
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Lightline statusbar
Plug 'itchyny/lightline.vim'
set laststatus=2
set noshowmode
if !has('gui_running')
  set t_Co=256
endif
let g:lightline = {
	\ 'colorscheme': 'deus',
	\ 'active': {
	\ 'left': [ [ 'mode', 'paste' ], [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
	\ },
	\ 'component_function': {
	\ 	'gitbranch': 'FugitiveHead'
	\ },
	\ }

" File searching
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" Themes
Plug 'ajmwagar/vim-deus', { 'as': 'deus' }
let g:deus_termcolors=256

" Vimux: tmux commmandline from vim
Plug 'preservim/vimux'

call plug#end()

" }}}


" MAPPINGS --------------------------------------------------------------- {{{

" Mappings code goes here.

" Center the cursor vertically when moving to the next word during a search.
nnoremap n nzz
nnoremap N Nzz

" Move faster between panes
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Fzf: mapping for finders
noremap <c-f> :Rg<CR>

" Vimux: run last command executed by VimuxRunCommand
map <Leader>vl :VimuxRunLastCommand<CR>

" Vimux: inspect runner pane
map <Leader>vi :VimuxInspectRunner<CR>

" }}}


" VIMSCRIPT -------------------------------------------------------------- {{{

" This will enable code folding.
" Use the marker method of folding.
augroup filetype_vim
    autocmd!
    autocmd FileType vim setlocal foldmethod=marker
augroup END

" More Vimscripts code goes here.

" Netrw: configurations
let g:netrw_liststyle = 3
let g:netrw_banner = 0
let g:netrw_browse_split = 4
let g:netrw_winsize = 20
let g:netrw_keepdir = 0
let g:netrw_localcopydircmd = 'cp -r'

" }}}


" STATUS LINE ------------------------------------------------------------ {{{

" Status bar code goes here.

set nocompatible            " disable compatibility to old-time vi
set showmatch               " show matching 
set ignorecase              " case insensitive 
set mouse=v                 " middle-click paste with 
set hlsearch                " highlight search 
set incsearch               " incremental search
set tabstop=4               " number of columns occupied by a tab 
set softtabstop=4           " see multiple spaces as tabstops so <BS> does the right thing
set expandtab               " converts tabs to white space
set shiftwidth=4            " width for autoindents
set autoindent              " indent a new line the same amount as the line just typed
set number                  " add line numbers
set relativenumber          " add line incremental numbers for faster commands
set wildmode=longest,list   " get bash-like tab completions
set cc=100                  " set an 100 column border for good coding style
filetype plugin indent on   " allow auto-indenting depending on file type
syntax on                   " syntax highlighting
set mouse=a                 " enable mouse click
set clipboard=unnamedplus   " using system clipboard
filetype plugin on          " enable plugins based on filetypes
set cursorline              " highlight current cursorline
set ttyfast                 " Speed up scrolling in Vim
set spell                   " enable spell check (may need to download language package)
set noswapfile              " disable creating swap file
set backupdir=~/.cache/vim  " directory to store backup files.
set background=dark         " background theme
set splitright              " set direction to split command

" Set colorscheme
set t_Co=256
set termguicolors

let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

colorscheme deus

" }}}
