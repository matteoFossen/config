# $Id: screenrc,v 1.15 2003/10/08 11:39:03 zal Exp $
#
# /etc/screenrc
#
#   This is the system wide screenrc.
#
#   You can use this file to change the default behavior of screen system wide
#   or copy it to ~/.screenrc and use it as a starting point for your own
#   settings.
#
#   Commands in this file are used to set options, bind screen functions to
#   keys, redefine terminal capabilities, and to automatically establish one or
#   more windows at the beginning of your screen session.
#
#   This is not a comprehensive list of options, look at the screen manual for
#   details on everything that you can put in this file.
#

# ------------------------------------------------------------------------------
# SCREEN SETTINGS
# ------------------------------------------------------------------------------

# Don't display the copyright page
startup_message off

# Uses nethack-style messages
#nethack on

# Will force screen to process ^S/^Q
defflow on 

# Log new screen windows in utmp.
deflogin on

# Automatically detach on hangup.
autodetach on

# Turn visual bell on
vbell on
vbell_msg "   Wuff  ----  Wuff!!  "

# Define a bigger scrollback, default is 100 lines
defscrollback 4096

# Run everything in UTF-8.
defutf8 on
encoding UTF-8
defencoding UTF-8

# If a window goes unresponsive, don't block the whole session waiting for it.
nonblock on

# Enable non-blocking mode to better cope with flaky ssh connections.
defnonblock 5

# Allow editors etc. to restore display on exit rather than leaving existing text in place
altscreen on

# Don't kill window after the process died
# zombie kr #  k: destory window, r: resurrect window

# Echo command name whenever a window is created or resurrected.
#verbose on

# Changes the name of logfile.
#logfile 'screen/log/screenlog.%H.%Y%m%d-%02c:%s-%n.%t.log'
#logtstamp on
#logtstamp string "\n-- SCREEN [%Y/%m/%d %02c:%s] %n:%t --\n"
 
# Changes the directory for hardcopy.
#hardcopydir 'screen/hardcopy'
#hardcopy_append on

# Name column in windowlist
#windowlist string "%4n %h%=%f"
#windowlist title "Num F      Title"
#windowlist string "%3n %6f %011=%t"
#
#windowlist title        " Num%+3=| Fl%+3=| Name"
#windowlist string       " %3n%+3=| %f%+3=| %t"
#
#windowlist title  '%{u .g}Num Flags Title%=[0-9] select the number [movement] j,C-n:Down k,C-p:Up (C-)f:PageDown (C-)b:PageUp'
#windowlist string '%{.g}%3n %{.y}%f%09=%{dg} %t %='

# PASSWORD
# This commands sets the *internal* password for the screen session.
# WARNING!! If this is set then a "lock" command will only let you in to the
# session after you enter the user's account password and then *also*
# the internal password for that session. This gives additional safety but,
# if you forget the internal password then you cannot resume your session.
# Use :password to generate a password
# password ODSJQf.4IJN7E    # "1234"

# Shell:  Default process started in screen's windows.
# Makes it possible to use a different shell inside screen than is set as the default login shell.
# If begins with a '-' character, the shell will be started as a login shell.
# shell                 zsh
# shell                 bash
# shell -$SHELL
shell $SHELL

# ------------------------------------------------------------------------------
# SCREEN KEYBINDINGS
# ------------------------------------------------------------------------------

# Remove some stupid / dangerous key bindings
bind ^k
#bind L
bind ^\
# Make them better
bind \\ quit
bind K kill
bind I login on
bind O login off
bind } history

# An example of a "screen scraper" which will launch urlview on the current
# screen window
#
#bind ^B eval "hardcopy_append off" "hardcopy -h $HOME/.screen-urlview" "screen urlview $HOME/.screen-urlview"

# Change command character from ctrl-a to ctrl-b (emacs users may want this)
#escape ^Bb
 
# Hide hardstatus: ctrl-a u 
bind u eval "hardstatus ignore"
# Show hardstatus: ctrl-a U
bind U eval "hardstatus alwayslastline"



# ------------------------------------------------------------------------------
# TERMINAL SETTINGS
# ------------------------------------------------------------------------------

# Allow bold colors - necessary for some reason
attrcolor b ".I"

# The vt100 description does not mention "dl". *sigh*
termcapinfo vt100 dl=5\E[M

# Tell screen how to set colors. AB = background, AF=foreground
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm' 

# Use current bg color for erased chars
defbce on

# Set the hardstatus prop on gui terms to set the titlebar/icon title
termcapinfo xterm*|rxvt*|kterm*|Eterm* hs:ts=\E]0;:fs=\007:ds=\E]0;\007

# set these terminals up to be 'optimal' instead of vt100
termcapinfo xterm*|linux*|rxvt*|Eterm* OP

# Change the xterm initialization string from is2=\E[!p\E[?3;4l\E[4l\E>
# (This fixes the "Aborted because of window size change" konsole symptoms found
#  in bug #134198)
termcapinfo xterm 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'

# To get screen to add lines to xterm's scrollback buffer, uncomment the
# following termcapinfo line which tells xterm to use the normal screen buffer
# (which has scrollback), not the alternate screen buffer.
termcapinfo xterm|xterms|xs|rxvt ti@:te@

# Enable 256 color term
term screen-256color
term xterm-256color
term rxvt-unicode-256color

# caption description:
#caption always "%?%F%{-b bc}%:%{-b bb}%?%C|%D|%M %d|%H%?%F%{+u wb}%? %L=%-Lw%45>%{+b by}%n%f* %t%{-}%+Lw%-0<"
#
# Anything I don't describe is treated literally.
#
# %?        - Start of a conditional statement.
#  %F       - Use this part of the statement if the window has focus (i.e. it
#             is the only window or the currently active one).
#  %{-b bc} - Turn off bold, blue foreground, cyan background.
# %:        - else
#  %{-b bb} - Turn off bold, blue foreground, blue background (this obscures
#             the text on non-focused windows and just gives a blue line).
# %?        - End conditional statement.
#  %C       - time (hh:mm, leading space) in 12 hour format
#  %D       - Three-letter day-of-week appreviation
#  %M       - Three-letter month appreviation
#  %d       - Day of the month
#  %H       - hostname
#  %?       - Start of conditional statement.
# %F      - Use this part of the statement if the window has focus.
# %{+u wb}  - underlined, white foreground, blue background
#  %?       - End conditional (if not focused, text remaind blue on blue).
#  %L=    - truncation/padding point.  With the 'L' qualifier, basically
#             just acts as a reference point.  Further truncation/padding is
#             done relative to here, not the beginning of the string
#  %-Lw   - window list up to but not including the current window (-),
#             show window flags (L)
#  %45>   - truncation/padding marker; place this point about 45% of the
#             way into the display area (45)
#  %{+b by} - add bold (still underlined from before), blue foreground,
#             yellow background
#    %n   - number of the current window
#    %f   - flags for current window
#    %t   - title of current window
#  %{-}   - undo last color change (so now we're back to underlined white
#             on blue)  (technically, this is a pop; a second invocation
#             would drop things back to unadorned blue on cyan)
#  %+Lw   - window list from the next window on (-), show window flags (L)
#  %-0<   - truncation/padding point.  Place this point zero spaces (0)
#             from the right margin (-).
#
# caption description:
#caption always '%?%F%{= gW}%:%{= Kk}%?%2n%f%07=%t%='
caption string '%?%F%{= gW}%:%{= Kk}%?%2n%f%07=%t%='
#
# %?          - Start of a conditional statement.
#  %F         - Use this part of the statement if the window has focus (i.e. it
#               is the only window or the currently active one).
#  %{= gW}    - bright white on green.
# %:          - else
#  %{= Kk}    - bright black on black
# %?          - End conditional statement.
#  %2n        - number of the current window with left 2 padding
#  %f         - flags for current window
#  %07=       - left 7 padding for window number and flags
#  %t         - title of current window
#  %=         - truncation/padding point
#
# ---------------------------------------------------------+
# APPENDIX: STRING ESCAPES (make extracts from screen (1))
# ---------------------------------------------------------+
# The attribute set can either be specified as hexadecimal number
# or a combination of the following letters:
#
#   d     dim
#   u     underline
#   b     bold
#   r     reverse
#   s     standout
#   B     blinking
#
# Colors are coded either as a hexadecimal number or two letters specifying
# the desired background and foreground color (in that order).
# The following colors are known:
#
#   k     black
#   r     red
#   g     green
#   y     yellow
#   b     blue
#   m     magenta
#   c     cyan
#   w     white
#   d     default color
#   .     leave color unchanged
#
# The capitalized versions of the letter specify bright colors.
# You can also use the pseudo-color `i' to set just the brightness and leave the color unchanged.


# turn sending of screen messages to hardstatus off
hardstatus alwayslastline
#hardstatus alwayslastline '%{= M} %H%{= G} %l %= %{= w}%-w%{+b r}%n*%t%{-b r}%{w}%+w %= %{c}%d %D %{B}%c '

# use this for the hard status string
#hardstatus string "%h%? users: %u%?"
#hardstatus string '%{= R}[%{w}%H%{R}][%{w}%=%?%-Lw%?%{R}%n*%f%t%?(%u)%? %{w}%?%+Lw%?%?%=%{R}][%{w}%m/%d %{W}%C%A%{R}]'
#hardstatus string "%{.kW}%-w%{.W}%n %t%{-}%{=b kw}%?%+w%? %=%c %d/%m/%Y" #B&W & date&time
#hardstatus string '%{= kG}%-Lw%{= kW}%50> %n*%f %t%{= kG}%+Lw%< %{= kG}%-=%D %m/%d/%y | %C:%s %A | %1`%{-}'
##hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %m-%d %{W}%c %{g}]'
#hardstatus alwayslastline "%{=}%-w%{+b w}%n %t%{-b w}%+w %=%c"
#hardstatus alwayslastline "%{= kw}%{g}[ %{G}%H %{g}] %{Y}pkgs: %{w}%1` %{g}[%=%{ =kw}%{w}%-w%{Y}[%{W}%n-%t%{Y}]%{w}%+w%=%{g}][ %{w}%d-%m %{Y}%c %{g}]"
#hardstatus string "%{.kc}%-w%{.kw}%n*%t%{-}%+w %= %2` %3`/%4` %6`/%7` %5`/%9` %c %d/%m/%Y" #black+cyan+normal+white selected
#hardstatus string '%{= kB}%-Lw%{+r}%50> %n%f* %t%{= kB}%+Lw%< %{= kB}%-= %{-}'
#hardstatus string "%{.kc}%-w%{.kw}%n*%t%{-}%+w %= | %1` | %2`C | %3`/%4` | %6`/%7` | %5` | %c %d/%m/%Y" #with dwm status bar#
#hardstatus alwayslastline '%{= G}[ %{G}%H %{g}][%= %{= w}%?%-Lw%?%{= R}%n*%f %t%?%{= R}(%u)%?%{= w}%+Lw%?%= %{= g}][ %{y}Load: %l %{g}][%{B}%Y-%m-%d %{W}%c:%s %{g}]'
#hardstatus string '%{= Kd} %{= Kd}%-w%{= Kr}[%{= KW}%n %t%{= Kr}]%{= Kd}%+w %-= %{KG} %H%{KW}|%{KY}%101`%{KW}|%D %M %d %Y%{= Kc} %C%A%{-}'    #TABBED
#
hardstatus string '%{= Kd} %{= Kd}%-w%{= Kr}[%{= KW}%n %t%{= Kr}]%{= Kd}%+w %-= %{KG} %H %{KW}| %{= Kc}%l %{KW}| %{KW}%D %d %M, [%c]%{-}'    #MIA!!

# An alternative hardstatus to display a bar at the bottom listing the
# windownames and highlighting the current windowname in blue. (This is only
# enabled if there is no hardstatus setting for your terminal)
#
#hardstatus lastline "%-Lw%{= BW}%50>%n%f* %t%{-}%+Lw%<"


# ------------------------------------------------------------------------------
# STARTUP SCREENS
# ------------------------------------------------------------------------------

# Example of automatically running some programs in windows on screen startup.
#
#   The following will open top in the first window, an ssh session to monkey
#   in the next window, and then open mutt and tail in windows 8 and 9
#   respectively.
#
# screen top
# screen -t monkey ssh monkey
# screen -t mail 8 mutt
# screen -t daemon 9 tail -f /var/log/daemon.log

