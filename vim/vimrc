set shell=/bin/bash         " Ensuring standard shell
set t_Co=256                " 256 color mode
set encoding=utf-8          " always use utf-8
set mouse=a                 " enable mouse usage
set nocompatible            " should be auto-on, but to be sure...
set number                  " Numbering on left side.
set relativenumber          " Sets numbers relative to the current line
au InsertEnter * :set nu    " Enter absolute number mode in insert mode
au InsertLeave * :set rnu   "       relative ...         in normal mode
set ttyfast                 " Rendering
set ruler                   " Show file stats
set modelines=0             " Security

" Blink cursor on error instead of beeping (grr)
set visualbell

" Always show info line
set showmode
set showcmd
set laststatus=2

" Use system clipboard
set clipboard=unnamedplus
set clipboard+=unnamed

" My favorite colorschemes - with vundle/neobundle a lot more are usable
colors desert               " almost always existent
colorscheme gruvbox         " colorscheme if exists
let background="dark"       " override background dark

" only show tabs with >~ and trailing spaces as ·
highlight ColorColumn ctermbg=darkgreen
call matchadd('ColorColumn', '\%81v',100)
set listchars=tab:▸\ ,eol:¬
" set list                    " Shows characters 
set hlsearch                " hlsearches

" Enable Syntax-Highlighting
filetype off
syntax on
filetype on

" Highlight current line via bold-fonts and dark grey background
set cursorline
highlight CursorLine term=bold cterm=bold

" Wildmenu - Improved tabbing through : commands
set wildmenu
set wildmode=longest:full,full

" Indentation
" set autoindent              " Autoindents
set expandtab               " Replaces tab-press with 4 spaces
set formatoptions=tcqrn1
set noshiftround
set scrolloff=4             " always have 4 lines above/below the cursor
set shiftwidth=2            " How many columns to indent with >> and <<.
" set si                      " Enables smart indentation
set softtabstop=2
set tabstop=2               " Show tabs as 4 spaces
set textwidth=79
set wrap

" Little helpers
let mapleader="\<Space>"    " use , as the leader key. Standard: \

" Map Y such that it behaves like other capitals
map Y 0y$

" Map Q to repeat last recorded macro
map Q @@

" Improve up/down movement with wrapped lines
nnoremap j gj
nnoremap k gk

" Set w!! to force saving files as root
cmap w!! %sudo tee > /dev/null %

" Press leader/ for clearing search highlights
noremap <silent> <leader>/ :nohls<CR>

" Formatting
map <leader>q gqip

" Help standardized
noremap <F1> <ESC>

" Use arrow keys for buffer
noremap <left> :bp<CR>
noremap <right> :bn<CR>

" Use +/- for incrementing and decrementing numbers
nnoremap + <C-a>
nnoremap - <C-x>

" Visual indentation
vnoremap < <gv
vnoremap > >gv

"------------------------------------------------------------------------------

" Keep the search pattern at the center of the screen
nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz
nnoremap <silent> g* g*zz
nnoremap <silent> g# g#zz

" Improve vim splits - should speak for itself
nnoremap <silent> <leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> <leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
nnoremap <silent> <leader><leader>+ :exe "vertical resize " . (winwidth(0) * 3/2)<CR>
nnoremap <silent> <leader><leader>- :exe "vertical resize " . (winwidth(0) * 2/3)<CR>

" Window management
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Fake fullscreen by moving window in tab
nnoremap <Leader>f :tabe %<CR>

" Tab management
nnoremap <C-t>e :tabe<CR>
nnoremap <C-t>q :tabc<CR>
nnoremap <C-t>h gT<CR>
nnoremap <C-t>l gt<CR>

" Terminal management
map <C-t>t :term<CR>
tmap <C-t>t <C-c><CR><C-d><CR>
tmap <C-h> <C-w>h
tmap <C-j> <C-w>j
tmap <C-k> <C-w>k
tmap <C-l> <C-w>l
